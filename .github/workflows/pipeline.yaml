name: CI/CD for trello-reports # pipeline's name that will appear in Github Actions

on: # events that trigger our pipeline: push on any branch and release creation
  push:
  release:
    types: [created]

jobs: # jobs. We will have two jobs (test and publish) with multiple steps.
  test:
    # Our test job will run on ubuntu.
    # We define matrix strategy for python-version so that
    # our tests are run on multiple python versions:
    name: "Tests for Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: Set up Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: |
          nox -p ${{ matrix.python-version }}

  publish:
    # Our publish job will only run on release creation events,
    # and only if the test job has passed
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.7
      - name: Build and publish # publish package to PyPI
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD --build
