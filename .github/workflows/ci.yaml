name: ci
on:
  push:
jobs:
  tests:
    name: "Tests for Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
        poetry-version: [1.1.7]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry ${{ matrix.poetry-version }}
        run: |
          pip install poetry==${{ matrix.poetry-version }}
      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s poetry run pip --version || rm -rf .venv
      - name: View poetry --version
        run: poetry --version
      - name: Set up Nox
        run: |
          pip install nox
      - name: View nox --version
        run: nox --version
      - name: "Run nox targets for ${{ matrix.python-version }}"
        run: |
          nox -p ${{ matrix.python-version }}
      - name: "Convert coverage info to XML"
        run: |
          nox --sessions coverage
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
